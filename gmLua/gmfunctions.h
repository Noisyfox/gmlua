/************************************************************************** 
  LICENSE:

    gmLua is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    GMAPI is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with GMAPI; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
    02110-1301 USA
***************************************************************************/

#pragma once

#include <windows.h>
#include <string>
#include <sstream>
#include <map>
#define GMAPI_NO_D3D
#include "Gmapi.h"
extern "C"
{
	#include "lua.h"
	#include "lualib.h"
	#include "lauxlib.h"
}

namespace GMTOLUA
{
  extern std::map<std::string, lua_CFunction> functions;
  void _map();

/* GM WRAPPERS BEGIN */
int draw_sprite( lua_State *L );
int draw_sprite_tiled( lua_State *L );
int draw_background( lua_State *L );
int draw_background_tiled( lua_State *L );
int draw_clear( lua_State *L );
int draw_clear_alpha( lua_State *L );
int draw_point( lua_State *L );
int draw_line( lua_State *L );
int draw_circle( lua_State *L );
int draw_set_circle_precision( lua_State *L );
int draw_path( lua_State *L );
int draw_set_color( lua_State *L );
int draw_set_alpha( lua_State *L );
int draw_get_color( lua_State *L );
int draw_get_alpha( lua_State *L );
int make_color_rgb( lua_State *L );
int make_color_hsv( lua_State *L );
int color_get_red( lua_State *L );
int color_get_green( lua_State *L );
int color_get_blue( lua_State *L );
int color_get_hue( lua_State *L );
int color_get_saturation( lua_State *L );
int color_get_value( lua_State *L );
int merge_color( lua_State *L );
int draw_getpixel( lua_State *L );
int screen_save( lua_State *L );
int draw_set_font( lua_State *L );
int draw_set_halign( lua_State *L );
int draw_set_valign( lua_State *L );
int draw_text( lua_State *L );
int string_width( lua_State *L );
int string_height( lua_State *L );
int string_width_ext( lua_State *L );
int string_height_ext( lua_State *L );
int draw_point_color( lua_State *L );
int draw_primitive_begin( lua_State *L );
int draw_vertex( lua_State *L );
int draw_vertex_color( lua_State *L );
int draw_primitive_end( lua_State *L );
int sprite_get_texture( lua_State *L );
int background_get_texture( lua_State *L );
int texture_preload( lua_State *L );
int texture_set_priority( lua_State *L );
int texture_get_width( lua_State *L );
int texture_get_height( lua_State *L );
int draw_primitive_begin_texture( lua_State *L );
int draw_primitive_end( lua_State *L );
int texture_set_interpolation( lua_State *L );
int texture_set_blending( lua_State *L );
int texture_set_repeat( lua_State *L );
int draw_set_blend_mode( lua_State *L );
int draw_set_blend_mode_ext( lua_State *L );
int surface_create( lua_State *L );
int surface_free( lua_State *L );
int surface_exists( lua_State *L );
int surface_get_width( lua_State *L );
int surface_get_height( lua_State *L );
int surface_get_texture( lua_State *L );
int surface_set_target( lua_State *L );
int surface_reset_target( lua_State *L );
int surface_getpixel( lua_State *L );
int surface_save( lua_State *L );
int draw_surface( lua_State *L );
int draw_surface_tiled( lua_State *L );
int surface_copy( lua_State *L );
int tile_delete( lua_State *L );
int tile_exists( lua_State *L );
int tile_get_x( lua_State *L );
int tile_get_y( lua_State *L );
int tile_get_left( lua_State *L );
int tile_get_top( lua_State *L );
int tile_get_width( lua_State *L );
int tile_get_height( lua_State *L );
int tile_get_depth( lua_State *L );
int tile_get_visible( lua_State *L );
int tile_get_xscale( lua_State *L );
int tile_get_yscale( lua_State *L );
int tile_get_background( lua_State *L );
int tile_get_blend( lua_State *L );
int tile_get_alpha( lua_State *L );
int tile_set_position( lua_State *L );
int tile_set_background( lua_State *L );
int tile_set_visible( lua_State *L );
int tile_set_depth( lua_State *L );
int tile_set_scale( lua_State *L );
int tile_set_blend( lua_State *L );
int tile_set_alpha( lua_State *L );
int tile_layer_hide( lua_State *L );
int tile_layer_show( lua_State *L );
int tile_layer_delete( lua_State *L );
int tile_layer_shift( lua_State *L );
int tile_layer_find( lua_State *L );
int tile_layer_delete_at( lua_State *L );
int tile_layer_depth( lua_State *L );
int display_get_width( lua_State *L );
int display_get_height( lua_State *L );
int display_get_colordepth( lua_State *L );
int display_get_frequency( lua_State *L );
int display_set_size( lua_State *L );
int display_set_colordepth( lua_State *L );
int display_set_frequency( lua_State *L );
int display_set_all( lua_State *L );
int display_test_all( lua_State *L );
int display_reset( lua_State *L );
int display_mouse_get_x( lua_State *L );
int display_mouse_get_y( lua_State *L );
int display_mouse_set( lua_State *L );
int window_set_visible( lua_State *L );
int window_get_visible( lua_State *L );
int window_set_fullscreen( lua_State *L );
int window_get_fullscreen( lua_State *L );
int window_set_showborder( lua_State *L );
int window_get_showborder( lua_State *L );
int window_set_showicons( lua_State *L );
int window_get_showicons( lua_State *L );
int window_set_stayontop( lua_State *L );
int window_get_stayontop( lua_State *L );
int window_set_sizeable( lua_State *L );
int window_get_sizeable( lua_State *L );
int window_set_caption( lua_State *L );
int window_get_caption( lua_State *L );
int window_set_cursor( lua_State *L );
int window_get_cursor( lua_State *L );
int window_set_color( lua_State *L );
int window_get_color( lua_State *L );
int window_set_region_scale( lua_State *L );
int window_get_region_scale( lua_State *L );
int window_set_position( lua_State *L );
int window_set_size( lua_State *L );
int window_set_rectangle( lua_State *L );
int window_center( lua_State *L );
int window_default( lua_State *L );
int window_get_x( lua_State *L );
int window_get_y( lua_State *L );
int window_get_width( lua_State *L );
int window_get_height( lua_State *L );
int window_mouse_get_x( lua_State *L );
int window_mouse_get_y( lua_State *L );
int window_mouse_set( lua_State *L );
int window_set_region_size( lua_State *L );
int window_get_region_width( lua_State *L );
int window_get_region_height( lua_State *L );
int window_view_mouse_get_x( lua_State *L );
int window_view_mouse_get_y( lua_State *L );
int window_view_mouse_set( lua_State *L );
int window_views_mouse_get_x( lua_State *L );
int window_views_mouse_get_y( lua_State *L );
int window_views_mouse_set( lua_State *L );
int screen_redraw( lua_State *L );
int screen_refresh( lua_State *L );
int set_automatic_draw( lua_State *L );
int set_synchronization( lua_State *L );
int screen_wait_vsync( lua_State *L );
int window_handle( lua_State *L );
int place_free( lua_State *L );
int place_empty( lua_State *L );
int place_meeting( lua_State *L );
int place_snapped( lua_State *L );
int move_random( lua_State *L );
int move_snap( lua_State *L );
int move_wrap( lua_State *L );
int move_towards_point( lua_State *L );
int move_bounce_solid( lua_State *L );
int move_bounce_all( lua_State *L );
int move_contact_solid( lua_State *L );
int move_contact_all( lua_State *L );
int move_outside_solid( lua_State *L );
int move_outside_all( lua_State *L );
int distance_to_point( lua_State *L );
int distance_to_object( lua_State *L );
int position_empty( lua_State *L );
int position_meeting( lua_State *L );
int path_end( lua_State *L );
int mp_grid_destroy( lua_State *L );
int mp_grid_clear_all( lua_State *L );
int mp_grid_clear_cell( lua_State *L );
int mp_grid_add_cell( lua_State *L );
int mp_grid_add_instances( lua_State *L );
int mp_grid_draw( lua_State *L );
int instance_find( lua_State *L );
int instance_exists( lua_State *L );
int instance_number( lua_State *L );
int instance_position( lua_State *L );
int instance_nearest( lua_State *L );
int instance_furthest( lua_State *L );
int instance_place( lua_State *L );
int instance_create( lua_State *L );
int instance_copy( lua_State *L );
int instance_destroy( lua_State *L );
int instance_change( lua_State *L );
int position_destroy( lua_State *L );
int position_change( lua_State *L );
int instance_deactivate_all( lua_State *L );
int instance_deactivate_object( lua_State *L );
int instance_activate_all( lua_State *L );
int instance_activate_object( lua_State *L );
int room_goto( lua_State *L );
int room_goto_previous( lua_State *L );
int room_goto_next( lua_State *L );
int room_restart( lua_State *L );
int room_previous( lua_State *L );
int room_next( lua_State *L );
int game_end( lua_State *L );
int game_restart( lua_State *L );
int game_save( lua_State *L );
int game_load( lua_State *L );
int transition_define( lua_State *L );
int transition_exists( lua_State *L );
int event_perform( lua_State *L );
int event_perform_object( lua_State *L );
int event_user( lua_State *L );
int event_inherited( lua_State *L );
int show_debug_message( lua_State *L );
int variable_global_exists( lua_State *L );
int variable_local_exists( lua_State *L );
int variable_global_get( lua_State *L );
int variable_global_array_get( lua_State *L );
int variable_local_get( lua_State *L );
int variable_local_array_get( lua_State *L );
int variable_global_set( lua_State *L );
int variable_local_set( lua_State *L );
int set_program_priority( lua_State *L );
int keyboard_set_map( lua_State *L );
int keyboard_get_map( lua_State *L );
int keyboard_unset_map( lua_State *L );
int keyboard_check( lua_State *L );
int keyboard_check_pressed( lua_State *L );
int keyboard_check_released( lua_State *L );
int keyboard_check_direct( lua_State *L );
int keyboard_get_numlock( lua_State *L );
int keyboard_set_numlock( lua_State *L );
int keyboard_key_press( lua_State *L );
int keyboard_key_release( lua_State *L );
int keyboard_clear( lua_State *L );
int io_clear( lua_State *L );
int keyboard_wait( lua_State *L );
int mouse_check_button( lua_State *L );
int mouse_check_button_pressed( lua_State *L );
int mouse_check_button_released( lua_State *L );
int mouse_clear( lua_State *L );
int io_clear( lua_State *L );
int io_handle( lua_State *L );
int mouse_wait( lua_State *L );
int joystick_exists( lua_State *L );
int joystick_name( lua_State *L );
int joystick_axes( lua_State *L );
int joystick_buttons( lua_State *L );
int joystick_has_pov( lua_State *L );
int joystick_direction( lua_State *L );
int joystick_check_button( lua_State *L );
int joystick_xpos( lua_State *L );
int joystick_ypos( lua_State *L );
int joystick_zpos( lua_State *L );
int joystick_rpos( lua_State *L );
int joystick_upos( lua_State *L );
int joystick_vpos( lua_State *L );
int joystick_pov( lua_State *L );
int effect_clear( lua_State *L );
int part_type_create( lua_State *L );
int part_type_destroy( lua_State *L );
int part_type_exists( lua_State *L );
int part_type_clear( lua_State *L );
int part_type_shape( lua_State *L );
int part_type_scale( lua_State *L );
int part_type_color1( lua_State *L );
int part_type_color2( lua_State *L );
int part_type_color3( lua_State *L );
int part_type_color_mix( lua_State *L );
int part_type_alpha1( lua_State *L );
int part_type_alpha2( lua_State *L );
int part_type_blend( lua_State *L );
int part_type_life( lua_State *L );
int part_type_step( lua_State *L );
int part_type_death( lua_State *L );
int part_type_gravity( lua_State *L );
int part_system_create( lua_State *L );
int part_system_destroy( lua_State *L );
int part_system_exists( lua_State *L );
int part_system_clear( lua_State *L );
int part_system_draw_order( lua_State *L );
int part_system_depth( lua_State *L );
int part_system_position( lua_State *L );
int part_system_automatic_update( lua_State *L );
int part_system_automatic_draw( lua_State *L );
int part_system_update( lua_State *L );
int part_system_drawit( lua_State *L );
int part_particles_clear( lua_State *L );
int part_particles_count( lua_State *L );
int part_emitter_create( lua_State *L );
int part_emitter_destroy( lua_State *L );
int part_emitter_destroy_all( lua_State *L );
int part_emitter_exists( lua_State *L );
int part_emitter_clear( lua_State *L );
int part_emitter_burst( lua_State *L );
int part_emitter_stream( lua_State *L );
int part_attractor_create( lua_State *L );
int part_attractor_destroy( lua_State *L );
int part_attractor_destroy_all( lua_State *L );
int part_attractor_exists( lua_State *L );
int part_attractor_clear( lua_State *L );
int part_attractor_position( lua_State *L );
int part_destroyer_create( lua_State *L );
int part_destroyer_destroy( lua_State *L );
int part_destroyer_destroy_all( lua_State *L );
int part_destroyer_exists( lua_State *L );
int part_destroyer_clear( lua_State *L );
int part_deflector_destroy( lua_State *L );
int part_deflector_destroy_all( lua_State *L );
int part_deflector_exists( lua_State *L );
int part_deflector_clear( lua_State *L );
int part_deflector_kind( lua_State *L );
int part_deflector_friction( lua_State *L );
int part_changer_create( lua_State *L );
int part_changer_destroy( lua_State *L );
int part_changer_destroy_all( lua_State *L );
int part_changer_exists( lua_State *L );
int part_changer_clear( lua_State *L );
int part_changer_kind( lua_State *L );
int show_message( lua_State *L );
int show_question( lua_State *L );
int get_integer( lua_State *L );
int get_string( lua_State *L );
int message_background( lua_State *L );
int message_alpha( lua_State *L );
int message_button( lua_State *L );
int message_input_color( lua_State *L );
int message_mouse_color( lua_State *L );
int message_caption( lua_State *L );
int message_position( lua_State *L );
int message_size( lua_State *L );
int show_menu( lua_State *L );
int show_menu_pos( lua_State *L );
int get_color( lua_State *L );
int get_open_filename( lua_State *L );
int get_save_filename( lua_State *L );
int get_directory( lua_State *L );
int get_directory_alt( lua_State *L );
int splash_show_video( lua_State *L );
int splash_show_text( lua_State *L );
int splash_show_image( lua_State *L );
int splash_set_main( lua_State *L );
int splash_set_scale( lua_State *L );
int splash_set_cursor( lua_State *L );
int splash_set_color( lua_State *L );
int splash_set_caption( lua_State *L );
int splash_set_fullscreen( lua_State *L );
int splash_set_border( lua_State *L );
int splash_set_size( lua_State *L );
int splash_set_adapt( lua_State *L );
int splash_set_top( lua_State *L );
int splash_set_interrupt( lua_State *L );
int splash_set_stop_key( lua_State *L );
int splash_set_stop_mouse( lua_State *L );
int show_info( lua_State *L );
int load_info( lua_State *L );
int show_error( lua_State *L );
int highscore_show( lua_State *L );
int highscore_set_background( lua_State *L );
int highscore_set_border( lua_State *L );
int highscore_set_font( lua_State *L );
int highscore_set_colors( lua_State *L );
int highscore_clear( lua_State *L );
int highscore_add( lua_State *L );
int highscore_add_current( lua_State *L );
int highscore_value( lua_State *L );
int highscore_name( lua_State *L );
int sound_play( lua_State *L );
int sound_loop( lua_State *L );
int sound_stop( lua_State *L );
int sound_stop_all( lua_State *L );
int sound_isplaying( lua_State *L );
int sound_volume( lua_State *L );
int sound_global_volume( lua_State *L );
int sound_fade( lua_State *L );
int sound_pan( lua_State *L );
int sound_background_tempo( lua_State *L );
int sound_set_search_directory( lua_State *L );
int sound_effect_set( lua_State *L );
int sound_effect_gargle( lua_State *L );
int sound_3d_set_sound_distance( lua_State *L );
int cd_init( lua_State *L );
int cd_present( lua_State *L );
int cd_number( lua_State *L );
int cd_playing( lua_State *L );
int cd_paused( lua_State *L );
int cd_track( lua_State *L );
int cd_length( lua_State *L );
int cd_track_length( lua_State *L );
int cd_position( lua_State *L );
int cd_track_position( lua_State *L );
int cd_play( lua_State *L );
int cd_stop( lua_State *L );
int cd_pause( lua_State *L );
int cd_resume( lua_State *L );
int cd_set_position( lua_State *L );
int cd_set_track_position( lua_State *L );
int cd_open_door( lua_State *L );
int cd_close_door( lua_State *L );
int MCI_command( lua_State *L );
/* GM WRAPPERS END */
};